
{{define "title"}}
Condition
{{end}}


{{define "content"}}
 


    <div class="row p-2">
        <div class="col">
            <div class="card ">
                <div class="card-header">
                    <p class="h5">
                        {{if .Form.ID}} Edit {{else}} Add {{end}} Condition</p>
                </div>
                <div class="card-body">

                    


 <form action="/conditions/{{.EndPoint.ID}}/{{if .Form.ID}}update/{{.Form.ID}}{{else}}add{{end}}" method="POST">
         <input type="hidden" name="csrf_token" value="{{.CSRFToken}}">
         <input type="hidden" name="id" value="{{.Form.ID}}">
         <input type="hidden" id="comparetodatatype" name="comparetodatatype" value="{{.Form.ComparetoDataType}}">

   

        
        <div class="form-group">
            <label for="conditionvariable">Variable</label>
            
                 <select class="form-control form-control-xs selectpicker {{with .Form.FieldErrors.variable}} is-invalid {{end}}" 
                name="variable"
                data-size="7" 
                data-live-search="true" 
                data-selectOnTab="true"
                data-title="From Request Parameters"
                 id="state_list" 
                 data-width="100%"
                 >  
                 
                 {{if .RequestParams}}
                 {{range .RequestParams}}
                  
                 <option value="{{.ID}}" {{if eq .ID $.Form.Variable }}selected{{end}}>{{.Key}} [{{.DefaultDatatype}}]  </option>
                 {{end}}
                 {{end}}

              </select>
          

           


            <!-- Use the `with` action to render the value of .Form.FieldErrors.title if it is not empty. -->

            {{with .Form.FieldErrors.variable}}
            <div class='invalid-feedback'>{{.}}</div>
            {{end}}
        </div>


        <div class="form-group">
            <label for="operator">operator</label>


              <select class="form-control form-control-xs {{with .Form.FieldErrors.operator}} is-invalid {{end}}" 
                name="operator"
                
                 id="" 
                  >  
                 
                 {{if .ComparisonOperators}}
                 {{range .ComparisonOperators}}

                 <option {{if eq . $.Form.Operator }} selected {{end}}>{{.}} </option>
                 {{end}}
                 {{end}}

              </select>


          

            <!-- Use the `with` action to render the value of .Form.FieldErrors.title if it is not empty. -->

            {{with .Form.FieldErrors.operator}}
            <div class='invalid-feedback'>{{.}}</div>
            {{end}}
        </div>

        <div class="form-group">
            <label for="compareto">compareto</label>
            <input id="compareto" class="form-control {{with .Form.FieldErrors.compareto}} is-invalid {{end}}" type="text"
                name="compareto" aria-describedby="comparetohelp" placeholder="From endpoint request" value='{{.Form.Compareto}}'
                required></input>


            <!-- Use the `with` action to render the value of .Form.FieldErrors.title if it is not empty. -->

            {{with .Form.FieldErrors.compareto}}
            <div class='invalid-feedback'>{{.}}</div>
            {{end}}
        </div>

   

    


     <br />
    <button type="submit" class="btn btn-primary">Submit</button>


</form>
</div> 
</div> 
</div> 
</div> 
{{end}}

{{define "aftercontent"}}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">
<script src="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.18/dist/js/bootstrap-select.min.js"></script>
<script>
    
    $.fn.selectpicker.Constructor.BootstrapVersion = '4';
    $(document).ready( function () {
        $('.selectpicker').selectpicker('val','{{.Form.Variable}}');
    } );
</script>

<style>
    .container {
       margin: 100px auto;
    }
 </style>
{{end}}